proposal awaitToPomise{
    case single{
        applicable to {
            "let <<ident:Identifier>> = await <<awaitedExpr: Expression>>;
            <<statements: (Statement && !ReturnStatement)+>>
            return <<returnExpr: Expression>>
            "
        }

        transform to{
            "return <<awaitedExpr>>.then((<<ident>>) => {
                <<statements>>
                return <<returnExpr>>
            });"
        }
    }
}